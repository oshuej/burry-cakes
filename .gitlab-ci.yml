stages:
  - test
  - build
  - docker

variables:
  NODE_ENV: production
  NODE_OPTIONS: --max_old_space_size=4096

default:
  image: node:20-bullseye
  before_script:
    - npm config set fund false
    - npm config set audit false
    - npm config set cache .npm --global
    - npm ci --legacy-peer-deps
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
    policy: pull-push

unit_tests:
  stage: test
  script:
    - npm run test -- --watchAll=false

build_app:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - build
    expire_in: 1 week

docker_image:
  stage: docker
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: 1
  before_script:
    - export DOCKER_REGISTRY="${DOCKER_REGISTRY:-$CI_REGISTRY}"
    - export DOCKER_IMAGE="${DOCKER_IMAGE:-$CI_REGISTRY_IMAGE}"
    - export DOCKER_USERNAME="${DOCKER_USERNAME:-$CI_REGISTRY_USER}"
    - export DOCKER_PASSWORD="${DOCKER_PASSWORD:-$CI_REGISTRY_PASSWORD}"
    - |
      if [ -n "$DOCKER_PASSWORD" ] && [ -n "$DOCKER_USERNAME" ] && [ -n "$DOCKER_REGISTRY" ]; then
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin "$DOCKER_REGISTRY"
      fi
  script:
    - docker build -t "$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker push "$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA"
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        docker tag "$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA" "$DOCKER_IMAGE:$CI_COMMIT_TAG"
        docker push "$DOCKER_IMAGE:$CI_COMMIT_TAG"
      fi
    - |
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        docker tag "$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA" "$DOCKER_IMAGE:latest"
        docker push "$DOCKER_IMAGE:latest"
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'
  needs:
    - job: build_app
      artifacts: true
